// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for Payer.</p>
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RequestPaymentConfiguration {
    /// <p>Specifies who pays for the download and request fees.</p>
    #[doc(hidden)]
    pub payer: std::option::Option<crate::types::Payer>,
}
impl RequestPaymentConfiguration {
    /// <p>Specifies who pays for the download and request fees.</p>
    pub fn payer(&self) -> std::option::Option<&crate::types::Payer> {
        self.payer.as_ref()
    }
}
impl RequestPaymentConfiguration {
    /// Creates a new builder-style object to manufacture [`RequestPaymentConfiguration`](crate::types::RequestPaymentConfiguration).
    pub fn builder() -> crate::types::builders::RequestPaymentConfigurationBuilder {
        crate::types::builders::RequestPaymentConfigurationBuilder::default()
    }
}

/// This is the datatype returned when calling `Builder::build()`.
#[allow(dead_code)]
pub type OutputShape = crate::types::RequestPaymentConfiguration;
/// A builder for [`RequestPaymentConfiguration`](crate::types::RequestPaymentConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
pub struct RequestPaymentConfigurationBuilder {
    pub(crate) payer: std::option::Option<crate::types::Payer>,
}
impl RequestPaymentConfigurationBuilder {
    /// <p>Specifies who pays for the download and request fees.</p>
    pub fn payer(mut self, input: crate::types::Payer) -> Self {
        self.payer = Some(input);
        self
    }
    /// <p>Specifies who pays for the download and request fees.</p>
    pub fn set_payer(mut self, input: std::option::Option<crate::types::Payer>) -> Self {
        self.payer = input;
        self
    }
    /// Consumes the builder and constructs a [`RequestPaymentConfiguration`](crate::types::RequestPaymentConfiguration).
    pub fn build(self) -> crate::types::RequestPaymentConfiguration {
        crate::types::RequestPaymentConfiguration { payer: self.payer }
    }
}
