// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A container for filter information that you can use to select S3 objects that are encrypted with Key Management Service (KMS).</p> <note>
/// <p>This is not supported by Amazon S3 on Outposts buckets.</p>
/// </note>
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SseKmsEncryptedObjects {
    /// <p>Specifies whether Amazon S3 replicates objects that are created with server-side encryption by using an KMS key stored in Key Management Service.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::SseKmsEncryptedObjectsStatus>,
}
impl SseKmsEncryptedObjects {
    /// <p>Specifies whether Amazon S3 replicates objects that are created with server-side encryption by using an KMS key stored in Key Management Service.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::SseKmsEncryptedObjectsStatus> {
        self.status.as_ref()
    }
}
impl SseKmsEncryptedObjects {
    /// Creates a new builder-style object to manufacture [`SseKmsEncryptedObjects`](crate::types::SseKmsEncryptedObjects).
    pub fn builder() -> crate::types::builders::SseKmsEncryptedObjectsBuilder {
        crate::types::builders::SseKmsEncryptedObjectsBuilder::default()
    }
}

/// This is the datatype returned when calling `Builder::build()`.
#[allow(dead_code)]
pub type OutputShape = crate::types::SseKmsEncryptedObjects;
/// A builder for [`SseKmsEncryptedObjects`](crate::types::SseKmsEncryptedObjects).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
pub struct SseKmsEncryptedObjectsBuilder {
    pub(crate) status: std::option::Option<crate::types::SseKmsEncryptedObjectsStatus>,
}
impl SseKmsEncryptedObjectsBuilder {
    /// <p>Specifies whether Amazon S3 replicates objects that are created with server-side encryption by using an KMS key stored in Key Management Service.</p>
    pub fn status(mut self, input: crate::types::SseKmsEncryptedObjectsStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>Specifies whether Amazon S3 replicates objects that are created with server-side encryption by using an KMS key stored in Key Management Service.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::SseKmsEncryptedObjectsStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`SseKmsEncryptedObjects`](crate::types::SseKmsEncryptedObjects).
    pub fn build(self) -> crate::types::SseKmsEncryptedObjects {
        crate::types::SseKmsEncryptedObjects {
            status: self.status,
        }
    }
}
