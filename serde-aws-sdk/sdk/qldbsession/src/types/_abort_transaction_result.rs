// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the details of the aborted transaction.</p>
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AbortTransactionResult {
    /// <p>Contains server-side performance information for the command.</p>
    #[doc(hidden)]
    pub timing_information: std::option::Option<crate::types::TimingInformation>,
}
impl AbortTransactionResult {
    /// <p>Contains server-side performance information for the command.</p>
    pub fn timing_information(&self) -> std::option::Option<&crate::types::TimingInformation> {
        self.timing_information.as_ref()
    }
}
impl AbortTransactionResult {
    /// Creates a new builder-style object to manufacture [`AbortTransactionResult`](crate::types::AbortTransactionResult).
    pub fn builder() -> crate::types::builders::AbortTransactionResultBuilder {
        crate::types::builders::AbortTransactionResultBuilder::default()
    }
}

/// This is the datatype returned when calling `Builder::build()`.
#[allow(dead_code)]
pub type OutputShape = crate::types::AbortTransactionResult;
/// A builder for [`AbortTransactionResult`](crate::types::AbortTransactionResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
pub struct AbortTransactionResultBuilder {
    pub(crate) timing_information: std::option::Option<crate::types::TimingInformation>,
}
impl AbortTransactionResultBuilder {
    /// <p>Contains server-side performance information for the command.</p>
    pub fn timing_information(mut self, input: crate::types::TimingInformation) -> Self {
        self.timing_information = Some(input);
        self
    }
    /// <p>Contains server-side performance information for the command.</p>
    pub fn set_timing_information(
        mut self,
        input: std::option::Option<crate::types::TimingInformation>,
    ) -> Self {
        self.timing_information = input;
        self
    }
    /// Consumes the builder and constructs a [`AbortTransactionResult`](crate::types::AbortTransactionResult).
    pub fn build(self) -> crate::types::AbortTransactionResult {
        crate::types::AbortTransactionResult {
            timing_information: self.timing_information,
        }
    }
}
