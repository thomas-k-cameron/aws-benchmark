// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyIpamResourceDiscoveryInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    #[doc(hidden)]
    pub dry_run: std::option::Option<bool>,
    /// <p>A resource discovery ID.</p>
    #[doc(hidden)]
    pub ipam_resource_discovery_id: std::option::Option<std::string::String>,
    /// <p>A resource discovery description.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>Add operating Regions to the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    #[doc(hidden)]
    pub add_operating_regions:
        std::option::Option<std::vec::Vec<crate::types::AddIpamOperatingRegion>>,
    /// <p>Remove operating Regions.</p>
    #[doc(hidden)]
    pub remove_operating_regions:
        std::option::Option<std::vec::Vec<crate::types::RemoveIpamOperatingRegion>>,
}
impl ModifyIpamResourceDiscoveryInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> std::option::Option<bool> {
        self.dry_run
    }
    /// <p>A resource discovery ID.</p>
    pub fn ipam_resource_discovery_id(&self) -> std::option::Option<&str> {
        self.ipam_resource_discovery_id.as_deref()
    }
    /// <p>A resource discovery description.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Add operating Regions to the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    pub fn add_operating_regions(
        &self,
    ) -> std::option::Option<&[crate::types::AddIpamOperatingRegion]> {
        self.add_operating_regions.as_deref()
    }
    /// <p>Remove operating Regions.</p>
    pub fn remove_operating_regions(
        &self,
    ) -> std::option::Option<&[crate::types::RemoveIpamOperatingRegion]> {
        self.remove_operating_regions.as_deref()
    }
}
impl ModifyIpamResourceDiscoveryInput {
    /// Creates a new builder-style object to manufacture [`ModifyIpamResourceDiscoveryInput`](crate::operation::modify_ipam_resource_discovery::ModifyIpamResourceDiscoveryInput).
    pub fn builder() -> crate::operation::modify_ipam_resource_discovery::builders::ModifyIpamResourceDiscoveryInputBuilder{
        crate::operation::modify_ipam_resource_discovery::builders::ModifyIpamResourceDiscoveryInputBuilder::default()
    }
}

/// This is the datatype returned when calling `Builder::build()`.
#[allow(dead_code)]
pub type OutputShape =
    crate::operation::modify_ipam_resource_discovery::ModifyIpamResourceDiscoveryInput;
/// A builder for [`ModifyIpamResourceDiscoveryInput`](crate::operation::modify_ipam_resource_discovery::ModifyIpamResourceDiscoveryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
pub struct ModifyIpamResourceDiscoveryInputBuilder {
    pub(crate) dry_run: std::option::Option<bool>,
    pub(crate) ipam_resource_discovery_id: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) add_operating_regions:
        std::option::Option<std::vec::Vec<crate::types::AddIpamOperatingRegion>>,
    pub(crate) remove_operating_regions:
        std::option::Option<std::vec::Vec<crate::types::RemoveIpamOperatingRegion>>,
}
impl ModifyIpamResourceDiscoveryInputBuilder {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = Some(input);
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>A resource discovery ID.</p>
    pub fn ipam_resource_discovery_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.ipam_resource_discovery_id = Some(input.into());
        self
    }
    /// <p>A resource discovery ID.</p>
    pub fn set_ipam_resource_discovery_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.ipam_resource_discovery_id = input;
        self
    }
    /// <p>A resource discovery description.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A resource discovery description.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Appends an item to `add_operating_regions`.
    ///
    /// To override the contents of this collection use [`set_add_operating_regions`](Self::set_add_operating_regions).
    ///
    /// <p>Add operating Regions to the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    pub fn add_operating_regions(mut self, input: crate::types::AddIpamOperatingRegion) -> Self {
        let mut v = self.add_operating_regions.unwrap_or_default();
        v.push(input);
        self.add_operating_regions = Some(v);
        self
    }
    /// <p>Add operating Regions to the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    pub fn set_add_operating_regions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AddIpamOperatingRegion>>,
    ) -> Self {
        self.add_operating_regions = input;
        self
    }
    /// Appends an item to `remove_operating_regions`.
    ///
    /// To override the contents of this collection use [`set_remove_operating_regions`](Self::set_remove_operating_regions).
    ///
    /// <p>Remove operating Regions.</p>
    pub fn remove_operating_regions(
        mut self,
        input: crate::types::RemoveIpamOperatingRegion,
    ) -> Self {
        let mut v = self.remove_operating_regions.unwrap_or_default();
        v.push(input);
        self.remove_operating_regions = Some(v);
        self
    }
    /// <p>Remove operating Regions.</p>
    pub fn set_remove_operating_regions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::RemoveIpamOperatingRegion>>,
    ) -> Self {
        self.remove_operating_regions = input;
        self
    }
    /// Consumes the builder and constructs a [`ModifyIpamResourceDiscoveryInput`](crate::operation::modify_ipam_resource_discovery::ModifyIpamResourceDiscoveryInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::modify_ipam_resource_discovery::ModifyIpamResourceDiscoveryInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::modify_ipam_resource_discovery::ModifyIpamResourceDiscoveryInput {
                dry_run: self.dry_run,
                ipam_resource_discovery_id: self.ipam_resource_discovery_id,
                description: self.description,
                add_operating_regions: self.add_operating_regions,
                remove_operating_regions: self.remove_operating_regions,
            },
        )
    }
}
