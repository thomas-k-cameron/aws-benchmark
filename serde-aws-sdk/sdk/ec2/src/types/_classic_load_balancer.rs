// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a Classic Load Balancer.</p>
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClassicLoadBalancer {
    /// <p>The name of the load balancer.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl ClassicLoadBalancer {
    /// <p>The name of the load balancer.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl ClassicLoadBalancer {
    /// Creates a new builder-style object to manufacture [`ClassicLoadBalancer`](crate::types::ClassicLoadBalancer).
    pub fn builder() -> crate::types::builders::ClassicLoadBalancerBuilder {
        crate::types::builders::ClassicLoadBalancerBuilder::default()
    }
}

/// This is the datatype returned when calling `Builder::build()`.
#[allow(dead_code)]
pub type OutputShape = crate::types::ClassicLoadBalancer;
/// A builder for [`ClassicLoadBalancer`](crate::types::ClassicLoadBalancer).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
pub struct ClassicLoadBalancerBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
}
impl ClassicLoadBalancerBuilder {
    /// <p>The name of the load balancer.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the load balancer.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`ClassicLoadBalancer`](crate::types::ClassicLoadBalancer).
    pub fn build(self) -> crate::types::ClassicLoadBalancer {
        crate::types::ClassicLoadBalancer { name: self.name }
    }
}
