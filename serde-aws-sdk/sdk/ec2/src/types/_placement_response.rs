// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the placement of an instance.</p>
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PlacementResponse {
    /// <p>The name of the placement group that the instance is in.</p>
    #[doc(hidden)]
    pub group_name: std::option::Option<std::string::String>,
}
impl PlacementResponse {
    /// <p>The name of the placement group that the instance is in.</p>
    pub fn group_name(&self) -> std::option::Option<&str> {
        self.group_name.as_deref()
    }
}
impl PlacementResponse {
    /// Creates a new builder-style object to manufacture [`PlacementResponse`](crate::types::PlacementResponse).
    pub fn builder() -> crate::types::builders::PlacementResponseBuilder {
        crate::types::builders::PlacementResponseBuilder::default()
    }
}

/// This is the datatype returned when calling `Builder::build()`.
#[allow(dead_code)]
pub type OutputShape = crate::types::PlacementResponse;
/// A builder for [`PlacementResponse`](crate::types::PlacementResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
pub struct PlacementResponseBuilder {
    pub(crate) group_name: std::option::Option<std::string::String>,
}
impl PlacementResponseBuilder {
    /// <p>The name of the placement group that the instance is in.</p>
    pub fn group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.group_name = Some(input.into());
        self
    }
    /// <p>The name of the placement group that the instance is in.</p>
    pub fn set_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group_name = input;
        self
    }
    /// Consumes the builder and constructs a [`PlacementResponse`](crate::types::PlacementResponse).
    pub fn build(self) -> crate::types::PlacementResponse {
        crate::types::PlacementResponse {
            group_name: self.group_name,
        }
    }
}
