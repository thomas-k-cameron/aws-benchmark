// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.</p>
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FleetSpotMaintenanceStrategiesRequest {
    /// <p>The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.</p>
    #[doc(hidden)]
    pub capacity_rebalance: std::option::Option<crate::types::FleetSpotCapacityRebalanceRequest>,
}
impl FleetSpotMaintenanceStrategiesRequest {
    /// <p>The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.</p>
    pub fn capacity_rebalance(
        &self,
    ) -> std::option::Option<&crate::types::FleetSpotCapacityRebalanceRequest> {
        self.capacity_rebalance.as_ref()
    }
}
impl FleetSpotMaintenanceStrategiesRequest {
    /// Creates a new builder-style object to manufacture [`FleetSpotMaintenanceStrategiesRequest`](crate::types::FleetSpotMaintenanceStrategiesRequest).
    pub fn builder() -> crate::types::builders::FleetSpotMaintenanceStrategiesRequestBuilder {
        crate::types::builders::FleetSpotMaintenanceStrategiesRequestBuilder::default()
    }
}

/// This is the datatype returned when calling `Builder::build()`.
#[allow(dead_code)]
pub type OutputShape = crate::types::FleetSpotMaintenanceStrategiesRequest;
/// A builder for [`FleetSpotMaintenanceStrategiesRequest`](crate::types::FleetSpotMaintenanceStrategiesRequest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-serialize"),
    derive(serde::Serialize)
)]
#[cfg_attr(
    all(aws_sdk_unstable, feature = "serde-deserialize"),
    derive(serde::Deserialize)
)]
pub struct FleetSpotMaintenanceStrategiesRequestBuilder {
    pub(crate) capacity_rebalance:
        std::option::Option<crate::types::FleetSpotCapacityRebalanceRequest>,
}
impl FleetSpotMaintenanceStrategiesRequestBuilder {
    /// <p>The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.</p>
    pub fn capacity_rebalance(
        mut self,
        input: crate::types::FleetSpotCapacityRebalanceRequest,
    ) -> Self {
        self.capacity_rebalance = Some(input);
        self
    }
    /// <p>The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.</p>
    pub fn set_capacity_rebalance(
        mut self,
        input: std::option::Option<crate::types::FleetSpotCapacityRebalanceRequest>,
    ) -> Self {
        self.capacity_rebalance = input;
        self
    }
    /// Consumes the builder and constructs a [`FleetSpotMaintenanceStrategiesRequest`](crate::types::FleetSpotMaintenanceStrategiesRequest).
    pub fn build(self) -> crate::types::FleetSpotMaintenanceStrategiesRequest {
        crate::types::FleetSpotMaintenanceStrategiesRequest {
            capacity_rebalance: self.capacity_rebalance,
        }
    }
}
